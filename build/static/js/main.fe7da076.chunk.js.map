{"version":3,"sources":["components/Text/index.tsx","components/Link/index.tsx","components/CommandLine/index.tsx","components/Page/index.tsx","components/HomePage/data.ts","components/HomePage/index.tsx","components/AboutPage/data.ts","components/AboutPage/index.tsx","components/PortfolioPage/data.ts","components/PortfolioPage/Projects/tceq.ts","components/PortfolioPage/Projects/template.ts","components/PortfolioPage/Projects/bracket.ts","components/PortfolioPage/Projects/sapd.ts","components/PortfolioPage/Projects/top100.ts","components/PortfolioPage/Projects/primaries.ts","components/PortfolioPage/Projects/podcastWidget.ts","components/PortfolioPage/Projects/graphicQuiz.ts","components/PortfolioPage/Projects/distillr.ts","components/PortfolioPage/index.tsx","components/App/index.tsx","registerServiceWorker.ts","index.tsx"],"names":["Text","text","Link","href","indexOf","title","target","rel","to","startsWithCD","theString","startsWith","CommandLineWithRouter","withRouter","matches","history","useState","value","setValue","className","onSubmit","event","preventDefault","findFunction","object","command","generateFindFunction","substr","toLowerCase","potentialMatch","find","url","window","open","push","type","autoFocus","innerWidth","onChange","currentTarget","onKeyDown","keyCode","currentCommand","forEach","match","style","display","Page","linkComponents","commandMatches","links","textComponents","map","theText","index","link","data","commands","HomePage","AboutPage","tceq","template","bracket","sapd","top100","primaries","podcastWidget","graphicQuiz","distillr","PortfolioPage","location","Route","exact","path","render","App","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","toString","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fe7da076.chunk.js","sourcesContent":["import * as React from 'react';\n\nexport interface Props {\n    text: string;\n}\n\nconst Text = ({ text }: Props) => {\n    return (\n        <p>{text}</p>\n    );\n};\n\nexport default Text;","import * as React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport './Link.css';\n\nexport interface Props {\n    text: string;\n    href: string;\n}\n\nconst Link = ({ text, href }: Props) => {\n    if (href.indexOf('http') > -1) {\n        return (\n            <p><a href={href} title={text} target=\"_blank\" rel=\"noreferrer\">{text}</a></p>\n        );\n    } else {\n        return (\n            <p><RouterLink to={href} title={text}>{text}</RouterLink></p>\n        );\n    }\n\n};\n\nexport default Link;","import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { History } from 'history';\n\nimport './CommandLine.css';\nimport { useState } from 'react';\n\ninterface Props extends RouteComponentProps<any> {\n    matches: {\n        command: string,\n        url: string\n    }[];\n    history: History;\n}\n\nconst startsWithCD = (theString: string): boolean => {\n    return theString.startsWith('cd ');\n}\n\nconst generateFindFunction = (value: string) => {\n    return function (object: { command: string, url: string }) {\n        return object.command === value;\n    };\n}\n\nconst CommandLine = ({matches, history}: Props) => {\n    const [value, setValue] = useState('');\n\n    const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n        setValue(event.currentTarget.value);\n    }\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.keyCode === 9) {\n            event.preventDefault();\n            const currentCommand = startsWithCD(value) ? value.substr(3) : value;\n            matches.forEach((match) => {\n                if (match.command.startsWith(currentCommand.toLowerCase())) {\n                    setValue(match.command);\n                }\n            });\n        }\n    }\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n\n        event.preventDefault();\n\n        const submitValue = startsWithCD(value) ? value.substr(3).toLowerCase() : value.toLowerCase();\n\n        const findFunction = generateFindFunction(submitValue);\n\n        const potentialMatch = matches.find(findFunction);\n\n        if (potentialMatch) {\n            if (potentialMatch.url.indexOf('http') > -1) {\n                window.open(potentialMatch.url);\n                setValue('');\n            } else {\n                if (history) {\n                    history.push(potentialMatch.url);\n                }\n            }\n        }\n\n    }\n\n    return (\n        <form className=\"command-line\" onSubmit={handleSubmit}>\n            <span>\n                <input\n                    type=\"text\"\n                    autoFocus={window.innerWidth > 1024}\n                    value={value}\n                    onChange={handleChange}\n                    onKeyDown={handleKeyDown}\n                />\n            </span>\n            <input type=\"submit\" style={{ display: 'none' }} />\n        </form>\n    );\n}\n\nexport const CommandLineWithRouter = withRouter(CommandLine);","import * as React from 'react';\n\nimport Text from '../Text';\nimport Link from '../Link';\nimport { CommandLineWithRouter } from '../CommandLine';\n\nimport './Page.css';\n\nexport interface Props {\n    text: string[];\n    commandMatches: {\n        command: string,\n        url: string\n    }[];\n    links?: {\n        text: string,\n        href: string\n    }[];\n}\n\nconst Page = ({ text, commandMatches, links }: Props) => {\n    const textComponents = text.map((theText, index) => { return <Text text={theText} key={index} />; });\n    let linkComponents;\n    if (links) {\n        linkComponents = links.map((link, index) => { return <Link text={link.text} href={link.href} key={index} />; });\n    }\n\n    if (linkComponents) {\n        return (\n            <div>\n                {textComponents}\n                <div className=\"link-container\">\n                    {linkComponents}\n                </div>\n                <CommandLineWithRouter matches={commandMatches} />\n            </div>\n        );\n    }\n    return (\n        <div>\n            {textComponents}\n            <CommandLineWithRouter matches={commandMatches} />\n        </div>\n    );\n};\n\nexport default Page;","const data = {\n    text: [\n        `Hi, I'm Kia Farhang, a software developer in Austin, Texas currently working for DataStax.`,\n        `You can navigate this site using the links below - or, if you'd like, use the command line at the bottom of the screen.`,\n        `Type the name of the page you'd like to visit. \n        To access the \"about\" page, type \"about\" and press enter.`,\n        `\"../\" will take you up one level.`,\n        `If you'd rather just see my resume, click the 'resume' link below.`\n    ],\n    links: [\n        { text: 'about', href: 'about' },\n        { text: 'portfolio', href: 'portfolio' },\n        { text: 'resume', href: 'https://github.com/KiaFarhang/ts-portfolio/blob/master/kia-farhang-resume.pdf' }\n    ],\n    commands: [\n        { command: 'about', url: 'about' },\n        { command: 'portfolio', url: 'portfolio' },\n        { command: 'resume', url: 'https://github.com/KiaFarhang/ts-portfolio/blob/master/kia-farhang-resume.pdf' }\n    ]\n};\n\nexport default data;","import * as React from 'react';\n\nimport Page from '../Page';\n\nimport data from './data';\n\nconst HomePage = () => {\n    return (\n        <Page text={data.text} links={data.links} commandMatches={data.commands} />\n    );\n};\n\nexport default HomePage;","const data = {\n    text: [\n        `I grew up in Minnesota, where I studied journalism in college.`,\n        `That took me to Southern California, where I started coding and eventually switched careers.`,\n        `I prefer back-end, test-driven development whenever possible.`,\n        `Outside of work, I enjoy reading, writing fiction (it's bad), playing video games and taking bike rides.`\n    ],\n    links: [\n        { text: 'home', href: '' },\n        { text: 'portfolio', href: 'portfolio' },\n        { text: 'resume', href: 'https://github.com/KiaFarhang/ts-portfolio/blob/master/kia-farhang-resume.pdf' },\n        { text: 'linkedin', href: 'https://www.linkedin.com/in/kia-farhang-68423966/' }\n\n    ],\n    commands: [\n        { command: '../', url: '../' },\n        { command: 'home', url: '' },\n        { command: 'portfolio', url: 'portfolio' },\n        { command: 'resume', url: 'https://github.com/KiaFarhang/ts-portfolio/blob/master/kia-farhang-resume.pdf' },\n        { command: 'linkedin', url: 'https://www.linkedin.com/in/kia-farhang-68423966/' }\n    ]\n};\n\nexport default data;","import * as React from 'react';\n\nimport Page from '../Page';\n\nimport data from './data';\n\nconst AboutPage = () => {\n    return (\n        <Page text={data.text} links={data.links} commandMatches={data.commands} />\n    );\n};\n\nexport default AboutPage;","const data = {\n    text: [\n        `Here are a few of my recent projects.`,\n        `You can also use the \"github\" command to open my GitHub profile.`\n    ],\n    links: [\n        { text: 'home', href: '' },\n        { text: 'about', href: 'about' },\n        { text: 'github', href: 'https://github.com/kiafarhang' },\n        { text: 'top-100', href: 'portfolio/top-100' },\n        { text: 'primaries', href: 'portfolio/primaries' },\n        { text: 'distillr', href: 'portfolio/distillr' },\n        { text: 'sapd-scraper', href: 'portfolio/sapd-scraper' },\n        { text: 'podcast-widget', href: 'portfolio/podcast-widget' },\n        { text: 'graphic-quiz', href: 'portfolio/graphic-quiz' },\n        { text: 'story-template', href: 'portfolio/template' },\n        { text: 'football-bracket', href: 'portfolio/football-bracket' },\n        { text: 'tceq-scraper', href: 'portfolio/tceq' }\n    ],\n    commands: [\n        { command: '../', url: '../' },\n        { command: 'home', url: '' },\n        { command: 'about', url: 'about' },\n        { command: 'github', url: 'https://github.com/kiafarhang' },\n        { command: 'top-100', url: 'portfolio/top-100' },\n        { command: 'primaries', url: 'portfolio/primaries' },\n        { command: 'distillr', url: 'portfolio/distillr' },\n        { command: 'sapd-scraper', url: 'portfolio/sapd-scraper' },\n        { command: 'podcast-widget', url: 'portfolio/podcast-widget' },\n        { command: 'graphic-quiz', url: 'portfolio/graphic-quiz' },\n        { command: 'story-template', url: 'portfolio/template' },\n        { command: 'football-bracket', url: 'portfolio/football-bracket' },\n        { command: 'tceq-scraper', url: 'portfolio/tceq' }\n    ]\n};\n\nexport default data;","const tceq = {\n    text: [\n        `The Texas Commission on Environmental Quality receives dozens of complaints every week regarding possible violations of environmental law.`,\n        `This scraper manipulates the group's ASP.NET web form daily, adding each complaint to a database and emailing it to the environmental reporter at the Express-News.`,\n        `Use the \"repo\" command to read more on GitHub.`\n    ],\n    links: [\n        { text: 'portfolio', href: '../portfolio' },\n        { text: 'repo', href: 'https://github.com/sa-express-news/tceq-scraper' }\n\n    ],\n    commands: [\n        { command: '../', url: '../portfolio' },\n        { command: 'portfolio', url: '../portfolio' },\n        { command: 'repo', url: 'https://github.com/sa-express-news/tceq-scraper' }\n    ]\n};\n\nexport default tceq;","const template = {\n    text: [\n        `When I joined the Express-News, we had to use an expensive third-party tool to dress up big stories on the web.`,\n        `I used React and ArchieML, a markup language created at the New York Times, to build a longform template in house.`,\n        `Use the \"repo\" command to read more on GitHub. Use \"example\" to see a story that uses the template.`\n    ],\n    links: [\n        { text: 'portfolio', href: '../portfolio' },\n        { text: 'repo', href: 'https://github.com/sa-express-news/longform-story-template' },\n        { text: 'example', href: 'http://www.expressnews.com/40-days-of-mourning/' }\n\n    ],\n    commands: [\n        { command: '../', url: '../portfolio' },\n        { command: 'portfolio', url: '../portfolio' },\n        { command: 'repo', url: 'https://github.com/sa-express-news/longform-story-template' },\n        { command: 'example', url: 'http://www.expressnews.com/40-days-of-mourning/' }\n    ]\n};\n\nexport default template;","const bracket = {\n    text: [\n        `This React + Redux application lets users fill out brackets\n         for the Texas high school football playoffs and follow along as the playoffs progress.`,\n        `I set up a PostgreSQL database to hold user \n        brackets and a Node.js REST API to allow users to send their brackets after picking their winning teams. `,\n        `Use the \"view\" command to open the page. \n        Use the \"repo\" command to see the front-end code on GitHub. Back-end code available on request.`\n    ],\n    links: [\n        { text: 'portfolio', href: '../portfolio' },\n        { text: 'view', href: 'https://expressnewsdata.com/brackets/uil-2017-bracket/' },\n        { text: 'repo', href: 'https://github.com/sa-express-news/UIL-bracket-17' }\n\n    ],\n    commands: [\n        { command: '../', url: '../portfolio' },\n        { command: 'portfolio', url: '../portfolio' },\n        { command: 'view', url: 'https://expressnewsdata.com/brackets/uil-2017-bracket/' },\n        { command: 'repo', url: 'https://github.com/sa-express-news/UIL-bracket-17' },\n    ]\n};\n\nexport default bracket;","const sapd = {\n    text: [\n        `This scraper manipulates the San Antonio Police Department’s web application to programmatically request records on more than 6 million calls for service since January 2011 and add them to a PostgreSQL database.`,\n        `I started work on the project a few months into my time at the Express-News, but my overzealous object-oriented approach eventually led to memory leaks. I took a second pass with functional programming, resulting in faster, leaner and more easily tested code.`,\n        `Use the \"repo\" command to see the code on GitHub.`\n    ],\n    links: [\n        { text: 'portfolio', href: '../portfolio' },\n        { text: 'repo', href: 'https://github.com/sa-express-news/sapd-crime-scraper' }\n\n    ],\n    commands: [\n        { command: '../', url: '../portfolio' },\n        { command: 'portfolio', url: '../portfolio' },\n        { command: 'repo', url: 'https://github.com/sa-express-news/sapd-crime-scraper' },\n    ]\n};\n\nexport default sapd;","const top100 = {\n    text: [\n        `Every year the Express-News ranks the top 100 bars, restaurants and other food places around the city.`,\n        `I wanted to build something useful to readers, so I created this React + Redux app to let them\n        filter by type of food, price range, etc.`,\n        `My favorite feature is the ability to use your location to show the closest establishments.`\n    ],\n    links: [\n        { text: 'portfolio', href: '../portfolio' },\n        { text: 'view', href: 'https://www.expressnews.com/best-san-antonio-bars-restaurants-2018/' },\n        { text: 'repo', href: 'https://bitbucket.org/KiaFarhang/top-100-2018' }\n\n    ],\n    commands: [\n        { command: '../', url: '../portfolio' },\n        { command: 'portfolio', url: '../portfolio' },\n        { command: 'view', url: 'https://www.expressnews.com/best-san-antonio-bars-restaurants-2018/' },\n        { command: 'repo', url: 'https://bitbucket.org/KiaFarhang/top-100-2018' },\n    ]\n};\n\nexport default top100;","const primaries = {\n    text: [\n        `My team built a page with live-updating graphics to show the results of Texas' March 2018 primary elections.`,\n        `Other team members built the front end, which used handlebars to render the charts.`,\n        `I wrote the back end server, which collected results from two APIs, pruned them and sent them to the front end via web socket connection.`\n    ],\n    links: [\n        { text: 'portfolio', href: '../portfolio' },\n        { text: 'view', href: 'https://www.expressnews.com/2018-primary-results/' },\n        { text: 'repo', href: 'https://github.com/sa-express-news/2018-primaries-server' }\n\n    ],\n    commands: [\n        { command: '../', url: '../portfolio' },\n        { command: 'portfolio', url: '../portfolio' },\n        { command: 'view', url: 'https://www.expressnews.com/2018-primary-results/' },\n        { command: 'repo', url: 'https://github.com/sa-express-news/2018-primaries-server' },\n    ]\n};\n\nexport default primaries;","const podcastWidget = {\n    text: [\n        `The Express-News recently started podcasting, with multiple shows per week.`,\n        `We wanted to let users listen to any (or all) of them from the home page of the site.`,\n        `I wrote an npm package to parse the RSS feeds of our podcasting platform, then created a podcast widget with Vue.`\n    ],\n    links: [\n        { text: 'portfolio', href: '../portfolio' },\n        { text: 'view', href: 'https://www.expressnews.com/' },\n        { text: 'repo', href: 'https://github.com/sa-express-news/home-podcast-widget' }\n\n    ],\n    commands: [\n        { command: '../', url: '../portfolio' },\n        { command: 'portfolio', url: '../portfolio' },\n        { command: 'view', url: 'https://www.expressnews.com/' },\n        { command: 'repo', url: 'https://github.com/sa-express-news/home-podcast-widget' },\n    ]\n};\n\nexport default podcastWidget;","const graphicQuiz = {\n    text: [\n        `We build a lot of graphics at the Express-News, and another member of the team\n        wanted a fun way to reuse them.`,\n        `I built the graphic quiz, a React + Redux app that presents the user with an image of a chart or graph\n        and four possible explanations for what that chart could be.`,\n        `Readers are encouraged to see how many they can get correct. I built the project\n        to be reusable so other members of the team can build quizzes quickly.`\n    ],\n    links: [\n        { text: 'portfolio', href: '../portfolio' },\n        {\n            text: 'view',\n            href: 'https://www.expressnews.com/news/local/article/Guess-the-graphic-Can-you-match-the-title-to-the-12543752.php'\n        },\n        { text: 'repo', href: 'https://github.com/sa-express-news/graphic-quiz.git' }\n\n    ],\n    commands: [\n        { command: '../', url: '../portfolio' },\n        { command: 'portfolio', url: '../portfolio' },\n        {\n            command: 'view',\n            url: 'https://www.expressnews.com/news/local/article/Guess-the-graphic-Can-you-match-the-title-to-the-12543752.php'\n        },\n        { command: 'repo', url: 'https://github.com/sa-express-news/graphic-quiz.git' },\n    ]\n};\n\nexport default graphicQuiz;","const distillr = {\n    text: [\n        `Distillr is the full-stack application a friend and I built as part of a San Antonio codeathon\n       in February 2018.`,\n        `The city's transit organization, VIA, held the event to encourage developers to build tools\n       to simplify the transit process.`,\n        `Users tell Distillr how much money + time they have and what they're in the mood for. The back end\n       uses that information and the Yelp API to send them a list of recommended trips and help them get there\n       via public transit.`,\n        `I built the back end in Typescript and Node; Jake built the front end in React.\n        I later rebuilt the back end in Java to learn the language; use the 'java' link for that.`\n    ],\n    links: [\n        { text: 'portfolio', href: '../portfolio' },\n        { text: 'view', href: 'https://jaketripp-distillr.herokuapp.com/' },\n        { text: 'repo', href: 'https://github.com/KiaFarhang/via-back-end' },\n        { text: 'java', href: 'https://github.com/KiaFarhang/distillr-back-end-java' }\n\n    ],\n    commands: [\n        { command: '../', url: '../portfolio' },\n        { command: 'portfolio', url: '../portfolio' },\n        { command: 'view', url: 'https://jaketripp-distillr.herokuapp.com/' },\n        { command: 'repo', url: 'https://github.com/KiaFarhang/via-back-end' },\n        { command: 'java', url: 'https://github.com/KiaFarhang/distillr-back-end-java' },\n    ]\n};\n\nexport default distillr;","import * as React from 'react';\n\nimport Page from '../Page';\n\nimport data from './data';\n\nimport tceq from './Projects/tceq';\nimport template from './Projects/template';\nimport bracket from './Projects/bracket';\nimport sapd from './Projects/sapd';\nimport top100 from './Projects/top100';\nimport primaries from './Projects/primaries';\nimport podcastWidget from './Projects/podcastWidget';\nimport graphicQuiz from './Projects/graphicQuiz';\nimport distillr from './Projects/distillr';\n\nimport { RouteComponentProps, Route } from 'react-router-dom';\n\nconst PortfolioPage = ({ match, location, history }: RouteComponentProps<{}>) => {\n    return (\n        <div>\n            <Route exact={true} path={match.url} render={() => <Page text={data.text} links={data.links} commandMatches={data.commands} />} />\n            <Route path={`${match.url}/top-100`} render={() => <Page text={top100.text} links={top100.links} commandMatches={top100.commands} />} />\n            <Route\n                path={`${match.url}/primaries`}\n                render={() => <Page text={primaries.text} links={primaries.links} commandMatches={primaries.commands} />}\n            />\n            <Route\n                path={`${match.url}/distillr`}\n                render={() => <Page text={distillr.text} links={distillr.links} commandMatches={distillr.commands} />}\n            />\n            <Route\n                path={`${match.url}/podcast-widget`}\n                render={() => <Page text={podcastWidget.text} links={podcastWidget.links} commandMatches={podcastWidget.commands} />}\n            />\n            <Route\n                path={`${match.url}/graphic-quiz`}\n                render={() => <Page text={graphicQuiz.text} links={graphicQuiz.links} commandMatches={graphicQuiz.commands} />}\n            />\n            <Route path={`${match.url}/tceq`} render={() => <Page text={tceq.text} links={tceq.links} commandMatches={tceq.commands} />} />\n            <Route\n                path={`${match.url}/template`}\n                render={() => <Page text={template.text} links={template.links} commandMatches={template.commands} />}\n            />\n\n            <Route\n                path={`${match.url}/football-bracket`}\n                render={() => <Page text={bracket.text} links={bracket.links} commandMatches={bracket.commands} />}\n            />\n            <Route path={`${match.url}/sapd-scraper`} render={() => <Page text={sapd.text} links={sapd.links} commandMatches={sapd.commands} />} />\n        </div>\n    );\n};\n\nexport default PortfolioPage;","import * as React from 'react';\nimport {\n  HashRouter as Router,\n  Route\n} from 'react-router-dom';\n\nimport HomePage from '../HomePage';\nimport AboutPage from '../AboutPage';\nimport PortfolioPage from '../PortfolioPage';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Route exact={true} path=\"/\" component={HomePage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/portfolio\" component={PortfolioPage} />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('node') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}